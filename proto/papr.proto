syntax = "proto3";

service Connector {
    rpc iss_enroll(iss_enroll_msg) returns (iss_enroll_rsp) {}
//    rpc anon_auth(anon_auth_msg) returns (anon_auth_rsp) {}
//    rpc data_dist_1(data_dist_1_msg) returns (data_dist_1_rsp) {}
//    rpc data_dist_2(data_dist_2_msg) returns (data_dist_2_rsp) {}
//    rpc data_dist_3(data_dist_3_msg) returns (data_dist_3_rsp) {}
//    rpc eq_id(eq_id_msg) returns (eq_id_rsp) {}
//    rpc cred_sign(cred_sign_msg) returns (cred_sign_rsp) {}
//    rpc ver_cred_1(ver_cred_1_msg) returns (ver_cred_1_rsp) {}
//    rpc ver_cred_2(ver_cred_2_msg) returns (ver_cred_2_rsp) {}
}

message iss_enroll_msg {
    string id;
    bytes pub_id;
    bytes gamma;
    map<string, bytes> ciphertext;
    zkp proof;
}

message iss_enroll_rsp {
    bytes sigma_pub_id;
    bytes u;
    bytes e_u_prime;
    zkp pi_issue;
    map<string, bytes> biparams;
}

message zkp {
    bytes challenge;
    map<string, string> response;
}